{"version":3,"sources":["components/Card.js","components/ColorButton.js","components/Toaster.js","components/CopyUrl.js","components/Form/RedirectForm.js","App.js","reportWebVitals.js","index.js"],"names":["Card","styled","div","ColorButton","withStyles","theme","root","color","backgroundColor","Button","Toaster","message","type","React","useState","open","setOpen","useEffect","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","severity","CopyUrl","title","url","copied","setCopied","style","height","display","justifyContent","padding","margin","text","onCopy","IconButton","aria-label","FileCopyOutlined","fontSize","RedirectForm","alias","data","setData","progress","setProgress","error","setError","responseError","setResponseError","setMessage","validURL","str","RegExp","test","handleErrors","response","status","Error","handleOnChange","e","target","name","value","className","onSubmit","preventDefault","errors","Object","keys","length","validate","fetch","method","headers","body","JSON","stringify","then","json","catch","TextField","undefined","onChange","helperText","id","label","variant","disabled","CircularProgress","marginTop","width","createdAt","App","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.a0af5b35.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const Card = styled.div`\r\n  background: white;\r\n  padding: 1.2em;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.2);\r\n  max-width: 640px;\r\n`;\r\n\r\n","import withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n    root: {\r\n        color: '#ffffff',\r\n        backgroundColor: '#dc4618',\r\n        '&:hover': {\r\n            backgroundColor: '#f3580d',\r\n        },\r\n    },\r\n}))(Button);\r\n\r\nexport default ColorButton;","import React, {useEffect} from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst Toaster = ({message, type}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        if (message !== null)\r\n            setOpen(true);\r\n    }, [message])\r\n\r\n    const handleClose = (event, reason) => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={10000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={type}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}\r\n\r\nexport default Toaster","import React, {useEffect, useState} from \"react\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toaster from \"./Toaster\";\r\nimport {FileCopyOutlined} from '@material-ui/icons';\r\n\r\nconst CopyUrl = ({title, url}) => {\r\n\r\n    const [copied, setCopied] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setCopied(false);\r\n    }, [url])\r\n\r\n    const styleC = {\r\n        height: '3em',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '12px 0',\r\n        margin: 'auto'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={styleC}>\r\n                <h4>{title}: {url}</h4>\r\n                <CopyToClipboard text={url} onCopy={() => setCopied(true)}>\r\n                    <IconButton aria-label=\"delete\">\r\n                        <FileCopyOutlined fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </CopyToClipboard>\r\n            </div>\r\n            {copied && <Toaster message=\"Copied!\" type=\"success\"/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CopyUrl;","import React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./RedirectForm.css\"\r\nimport ColorButton from \"../ColorButton\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Toaster from \"../Toaster\";\r\nimport CopyUrl from \"../CopyUrl\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst RedirectForm = () => {\r\n\r\n    const [data, setData] = useState({\r\n        alias: '',\r\n        url: ''\r\n    });\r\n    const [progress, setProgress] = useState(false);\r\n    const [error, setError] = useState({});\r\n\r\n    const [responseError, setResponseError] = useState(null);\r\n\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const validate = ({ alias, url }) => {\r\n        const errors = {};\r\n        if (!validURL(url)) {\r\n            errors.url = \"Provide Valid Url!\";\r\n        }\r\n        if (alias === '') {\r\n            errors.alias = \"Alias Required!\";\r\n        }\r\n        return Object.keys(errors).length === 0 ? null : errors;\r\n    }\r\n\r\n    const validURL = (str) => {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(str);\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setResponseError(null);\r\n        const errors = validate(data);\r\n        setError( errors || {} );\r\n        if (errors) return;\r\n        setProgress(true);\r\n        fetch(\"https://byteurl.herokuapp.com/api/create\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(response => response.json())\r\n            .then(handleErrors)\r\n            .then(data => {\r\n                setProgress(false);\r\n                setMessage(data);\r\n                setData({alias: '', url: ''});\r\n                setResponseError(null)\r\n            })\r\n            .catch(error => {setResponseError(error.message); setProgress(false);});\r\n\r\n    }\r\n    function handleErrors(response) {\r\n        if (response.status) {\r\n            throw Error(response.message);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    const handleOnChange = e => {\r\n        const {name, value} = e.target\r\n        setData({...data, [name]: value})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"FormContainer\">\r\n            <form className=\"Form\" onSubmit={handleSubmit}>\r\n                <TextField\r\n                    error={error.url !== undefined}\r\n                    value={data.url}\r\n                    onChange={handleOnChange}\r\n                    helperText={error.url && error.url}\r\n                    name=\"url\"\r\n                    id=\"filled-alias\"\r\n                    label=\"Long Url\"\r\n                    variant=\"filled\"\r\n                    />\r\n                <TextField\r\n                    error={error.alias !== undefined}\r\n                    value={data.alias}\r\n                    onChange={handleOnChange}\r\n                    helperText={error.alias && error.alias}\r\n                    id=\"filled-url\"\r\n                    name=\"alias\"\r\n                    label=\"Alias\"\r\n                    variant=\"filled\"/>\r\n\r\n                <ColorButton disabled={progress} type=\"submit\"  variant=\"contained\" ><h4>Make Shorten URL</h4></ColorButton>\r\n\r\n            </form>\r\n            { progress && <CircularProgress style={{marginTop: '10px'} }/>}\r\n            { message &&\r\n             <Alert style={{marginTop: '30px', width: '100%'}}>\r\n                 <h3>Url Create Successfully</h3>\r\n                 <CopyUrl title=\"Short URL\"  url={message.alias}/>\r\n                 <CopyUrl title=\"Long URL\"  url={message.url}/>\r\n                 <p style={{marginTop: '20px'}}>Created At: {message.createdAt}</p>\r\n             </Alert>\r\n           }\r\n            <Toaster message={responseError} type=\"error\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RedirectForm;","import React, {Component} from 'react';\nimport './App.css';\nimport {Card} from './components/Card'\nimport RedirectForm from \"./components/Form/RedirectForm\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Card>\n                    <h1>Make Your <span className=\"span-green\">Free Shorten URL</span> with us</h1>\n                    <RedirectForm />\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}